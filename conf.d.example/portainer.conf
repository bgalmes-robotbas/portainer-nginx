##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from conf.d/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Expires map
map $sent_http_content_type $expires {
	default off;
	text/html epoch;
	application/json epoch;
	text/css max;
	application/javascript	max;
	~image/ max;
}

# SSE query map
map $http_accept $is_sse {
	default no;
	text/event-stream	yes;
}

#
# Portainer server
#
upstream docker-portainer {
	server portainer:9000;
}

server {

	expires $expires;

	# Listen to port 443 on both IPv4 and IPv6.
	listen 443 ssl default_server reuseport;
	listen [::]:443 ssl default_server reuseport;

	server_name portainer.example.com;

	# Load the certificate files.
	ssl_certificate /etc/letsencrypt/live/portainer-cert/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/portainer-cert/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/portainer-cert/chain.pem;

	# Load the Diffie-Hellman parameter.
	ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

	# Uncomment next line for get debug log information
	#error_log /var/log/nginx/error.log debug;

	#
	# Portainer
	#
	location / {
		proxy_http_version 1.1;
		proxy_set_header Connection "";
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		proxy_pass http://docker-portainer/;
	}

	location /ws/ {
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_cache_bypass $http_upgrade;
		proxy_cache_valid 200 302 1m;

		proxy_pass http://docker-portainer/ws/;
	}

	location /api/websocket/ {
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_cache_bypass $http_upgrade;
		proxy_cache_valid 200 302 1m;

		proxy_pass http://docker-portainer/api/websocket/;
	}

}
